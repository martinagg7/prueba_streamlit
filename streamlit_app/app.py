
#Liberias/Css/Arhivos/Data espero que funciones
import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px
import plotly.figure_factory as ff  
import numpy as np
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler
import seaborn as sns
from sklearn.cluster import KMeans
import plotly.graph_objects as go
import os

# Obtener la ruta del directorio actual donde est√° app.py
current_dir = os.path.dirname(__file__)

# Construir las rutas de los archivos CSV dentro de la misma carpeta
file_cliente_bi = os.path.join(current_dir, "cliente_bi.csv")
file_cluster_comp = os.path.join(current_dir, "df_cluster_comp.csv")
file_final = os.path.join(current_dir, "df_final.csv")

# Verificar si los archivos existen antes de cargarlos
for file in [file_cliente_bi, file_cluster_comp, file_final]:
    if not os.path.exists(file):
        raise FileNotFoundError(f"‚ö†Ô∏è Archivo no encontrado: {file}")

# Cargar los archivos CSV
df = pd.read_csv(file_cliente_bi)
df_cluster_comp = pd.read_csv(file_cluster_comp)
df_final = pd.read_csv(file_final)
#Estilos
def apply_custom_styles():
    st.markdown("""
    <style>
        /* Estilos Generales */
        body {
            font-family: Arial, sans-serif;
        }

        /* Estilo para Tablas */
        table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            border-radius: 8px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #F5F5F5;
        }

        th {
            background-color: #1F4E79;
            color: white;
            padding: 12px;
            text-align: center;
        }

        td {
            background-color: white;
            padding: 10px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }

        /* Estilos para Cards */
        .card {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            padding: 10px;
            margin-bottom: 20px;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.15);
        }
    </style>
    """, unsafe_allow_html=True)

# Llamar a la funci√≥n al inicio de la app
apply_custom_styles()

color_palette = ["#1F4E79", "#1F77B4", "#4A90E2", "#76A9FA"]

# Barra de navegaci√≥n para cambiar entre p√°ginas
menu = st.selectbox("Selecciona una secci√≥n:", ["Inicio","An√°lisis CLV","Segmentaci√≥n Clientes"])
st.markdown("---")

# --------------------------------------------------------------------------------------
#   PESTA√ëA 1: INTRODUCCI√ìN AL CLV
# --------------------------------------------------------------------------------------
if menu == "Inicio":
    st.title("üîç Customer Lifetime Value (CLV)")

    ## Introducci√≥n al Proyecto
    st.write("""
    En este proyecto, analizamos datos de una empresa automovil√≠stica para estudiar el valor de los clientes a futuro. Nuestro objetivo es calcular el CLV (Customer Lifetime Value) a 5 a√±os y evaluar c√≥mo contribuyen los clientes a la rentabilidad de la empresa.

    El **Customer Lifetime Value (CLV)** es una m√©trica que estima los ingresos netos que un cliente generar√° durante su relaci√≥n con la empresa. Comprender esta m√©trica permite optimizar estrategias de fidelizaci√≥n y segmentaci√≥n de clientes.

    - Un CLV alto indica que un cliente genera muchos ingresos y es rentable
    - CLV bajo o negativo puede significar que el cliente no genera ganancias o incluso que la empresa esta perdiendo dinero con √©l.
    """)

    ## C√°lculo del CLV a 5 A√±os
    st.subheader("F√≥rmula del CLV a 5 a√±os")
    st.latex(r"""
    CLV_{5\_anos} = Margen\_eur\_Medio \times \sum_{t=1}^{5} \frac{ Retenci√≥n^t }{(1+i)^t}
    """)

    st.write("""
    Donde:
    - **Retenci√≥n** ‚Üí Probabilidad de que el cliente contin√∫e comprando en el tiempo.
    - **Margen_eur_Medio** ‚ÜíBeneficio neto por cliente, calculado como la diferencia entre los ingresos generados por el cliente y los costes asociados a su adquisici√≥n y mantenimiento.
    - **i = 7%** ‚Üí Tasa de descuento aplicada para ajustar el valor del dinero en el tiempo.


    """)

    ## Conclusiones Clave
    st.subheader("Conclusiones Clave")

    data = {
        "Cliente": ["A", "B", "C", "D"],
        "Margen(‚Ç¨)": [1000, 500, 700, -300],
        "Retenci√≥n(%)": [0.95, 0.50, 0.00, 0.75],
        "CLV 1 A√±o (‚Ç¨)": [950, 250, 0, -225],
        "Explicaci√≥n": [
            "Cliente muy rentable",
            "Cliente rentable pero con menor fidelidad",
            "No genera beneficios a futuro",
            "Genera p√©rdidas"
        ]
    }

    df_escenarios = pd.DataFrame(data)

    st.markdown(df_escenarios.to_html(index=False), unsafe_allow_html=True)


    st.markdown("<br><br>", unsafe_allow_html=True)
    st.markdown("**Relevancia de la Retenci√≥n**", unsafe_allow_html=True)

    st.write("""
            
    **Alta Retenci√≥n:** Un cliente con alta retenci√≥n seguir√° siendo rentable a largo plazo, incluso si su margen es moderado.

    **Retenci√≥n 0:** Si la retenci√≥n es cero, el cliente dejar√° de generar ingresos en el futuro, sin importar su margen actual.

    **Retenci√≥n Alta pero Margen Negativo:** Cuando la retenci√≥n es alta pero el margen es negativo, el cliente continuar√° generando p√©rdidas con el tiempo.
    """)

    st.markdown("""
    ### An√°lisis de la Influencia de las Variables en la Tasa de Abandono (Churn)

    Para predecir la probabilidad  de abandono por cliente, analizamos qu√© variables tienen mayor influencia sobre esta. Esto lo representamos a trav√©s de una **matriz de correlaci√≥n**, la cual muestra c√≥mo cada variable se relaciona con el Churn .  

    üí° Para este an√°lisis, te sugerimos probar con las variables: **Edad_Media_Coche, PVP_Medio, RENTA_MEDIA_ESTIMADA, Km_Medio_por_Revision**.  

    """)
    #Para adaptar matriz
    with st.expander("Selecciona las variables para la matriz de correlaci√≥n"):
        variables_disponibles = ["Edad_Media_Coche", "PVP_Medio", 'RENTA_MEDIA_ESTIMADA',"Numero_Veces_Lead","Total_Quejas",'Km_Medio_por_Revision',"churn_medio_estimado"]
        variables_seleccionadas = st.multiselect("Elige las variables:", variables_disponibles, default=variables_disponibles)

    df_selected = df[variables_seleccionadas]
    for col in df_selected.columns:
        df_selected[col] = pd.to_numeric(df_selected[col], errors="coerce")

    # Calcular la matriz de correlaci√≥n
    corr_matrix = df_selected.corr()
    fig, ax = plt.subplots(figsize=(6, 5))
    sns.heatmap(corr_matrix, annot=True, cmap="Blues", fmt=".2f", linewidths=0.5, ax=ax)
    st.pyplot(fig)

    st.markdown("<br><br>", unsafe_allow_html=True)

    # Intepretaci√≥n Matriz Correlaci√≥n
    st.markdown("""
    #### Interpretaci√≥n de la Matriz de Correlaci√≥n
    """)

    data_corr = {
        "Variable": ["Edad_Media_Coche", "PVP_Medio", "RENTA_MEDIA_ESTIMADA", "Km_Medio_por_Revision"],
        "Coeficiente": [0.47, -0.14, -0.21, -0.52],
        "Interpretaci√≥n": [
            "Mayor antig√ºedad del coche, mayor probabilidad de abandono.",
            "Precio medio m√°s alto, menor churn, pero relaci√≥n d√©bil.",
            "Mayor renta, menor tasa de abandono.",
            "M√°s kil√≥metros por revisi√≥n, menor churn, clientes comprometidos."
        ]
    }

    df_corr = pd.DataFrame(data_corr)
    table_html = df_corr.to_html(index=False, classes="styled-table")
    st.markdown(table_html, unsafe_allow_html=True)

    # An√°lisis a fondo variable + influyentes
    variables_importantes = ["Edad_Media_Coche", "PVP_Medio", "RENTA_MEDIA_ESTIMADA", "Km_Medio_por_Revision"]

    st.markdown("<br><br>", unsafe_allow_html=True)
    st.markdown("#### Distribuci√≥n de Variables Clave")

    col1, col2 = st.columns(2)


    for i, variable in enumerate(variables_importantes):
        # Ajustar bins en Km_Medio_por_Revision
        bins = 30 if variable != "Km_Medio_por_Revision" else 50  # Aumentar bins para mejor distribuci√≥n
        
        fig = px.histogram(
            df, x=variable, nbins=bins, 
            color_discrete_sequence=[color_palette[i]], 
            title=f"Distribuci√≥n de {variable}"
        )
        
        if variable in ["RENTA_MEDIA_ESTIMADA", "Km_Medio_por_Revision"]:
            fig.update_xaxes(tickformat=",")  

        fig.update_layout(
            xaxis_title=variable,
            yaxis_title="Frecuencia",
            bargap=0.1
        )
        if i % 2 == 0:
            with col1:
                st.plotly_chart(fig, use_container_width=True)
        else:
            with col2:
                st.plotly_chart(fig, use_container_width=True)
    

# --------------------------------------------------------------------------------------
# üìå PESTA√ëA 2: AN√ÅLISIS CLV Y PROYECCI√ìN FINANCIERA
# --------------------------------------------------------------------------------------

if menu == "An√°lisis CLV":
    st.markdown("""
    ## üìä An√°lisis de Clientes y Proyecci√≥n Financiera

    En esta secci√≥n analizamos los datos de nuestra empresa para evaluar el comportamiento de los clientes actuales.  
    Hemos calculado tres m√©tricas clave para cada cliente:

    - **% de Retenci√≥n:** Probabilidad de que el cliente se mantenga fiel a la compa√±ia los pr√≥ximos a√±os.  
    - **% de Abandono:** Riesgo de que el cliente deje de comprar productos de la marca.  
    - **CLV a 5 A√±os (‚Ç¨):** Ingresos netos estimados que generar√° cada cliente en cinco a√±os.  

    Estos valores nos permiten entender qu√© clientes son m√°s rentables y qu√© acciones podemos tomar para mejorar la fidelizaci√≥n y rentabilidad futura.
    """)
    def format_number(value):
        if value >= 1_000_000:
            return f"{value / 1_000_000:.1f}M"
        elif value >= 1_000:
            return f"{value / 1_000:.1f}k"
        else:
            return f"{value:,.0f}"
  
    st.markdown("### M√©tricas Generales</h3>", unsafe_allow_html=True)

    

    # m√©tricas generales
    num_clientes = df.shape[0]
    ganancias_actuales = df["Margen_eur_Medio"].sum()
    costo_medio_cliente = df["Coste_Medio_Cliente"].mean() if "Coste_Medio_Cliente" in df.columns else 0  
    ganancias_futuras = df["CLV_5_anos"].sum()


    col1, col2, col3, col4 = st.columns(4)

    card_style = """
        <style>
            .metric-card {
                background-color: {color};
                padding: 15px;
                border-radius: 10px;
                text-align: center;
                color: white;
                font-size: 18px;
                display: flex;
                flex-direction: column;
                align-items: center;
            }
            .metric-title {
                font-size: 16px;
                font-weight: bold;
            }
            .metric-value {
                font-size: 22px;
                margin-top: 5px;
            }
        </style>
    """

    st.markdown(card_style, unsafe_allow_html=True)

    with col1:
        st.markdown(f"<div class='metric-card' style='background-color:{color_palette[0]};'>"
                    f"<div class='metric-title'>üë• Clientes Totales</div>"
                    f"<div class='metric-value'>{format_number(num_clientes)}</div>"
                    f"</div>", unsafe_allow_html=True)

    with col2:
        st.markdown(f"<div class='metric-card' style='background-color:{color_palette[1]};'>"
                    f"<div class='metric-title'>üí∞ Ganancias Actuales (‚Ç¨)</div>"
                    f"<div class='metric-value'>{format_number(ganancias_actuales)}</div>"
                    f"</div>", unsafe_allow_html=True)


    with col3:
        st.markdown(f"<div class='metric-card' style='background-color:{color_palette[2]};'>"
                    f"<div class='metric-title'>üí∏ Costo Medio por Cliente (‚Ç¨)</div>"
                    f"<div class='metric-value'>{format_number(costo_medio_cliente)}</div>"
                    f"</div>", unsafe_allow_html=True)

    with col4:
        st.markdown(f"<div class='metric-card' style='background-color:{color_palette[3]};'>"
                    f"<div class='metric-title'>üìà Ganancias Proyectadas (‚Ç¨)</div>"
                    f"<div class='metric-value'>{format_number(ganancias_futuras)}</div>"
                    f"</div>", unsafe_allow_html=True)
        

        
    st.markdown("### An√°lisis de la Retenci√≥n y Churn")
    st.markdown("""
    Para comprender mejor el comportamiento de los clientes, analizamos la distribuci√≥n de dos m√©tricas clave:
    - **Churn (%)**: Probabilidad de que el cliente deje de comprar.
    - **Retenci√≥n (%)**: Probabilidad de que el cliente siga comprando en los pr√≥ximos a√±os.

    El gr√°fico interactivo muestra la densidad de estas m√©tricas para toda la base de clientes.
    """)

    # Gr√°ficos de densidad
    churn_values = df["churn_medio_estimado"].dropna().values
    retention_values = df["retencion"].dropna().values

    fig = ff.create_distplot(
        [churn_values, retention_values],
        group_labels=["Churn (Abandono)", "Retenci√≥n"],
        colors=["red", "#1F4E79"],
        show_hist=False
    )

    fig.update_layout(
        title="Distribuci√≥n de Churn y Retenci√≥n",
        xaxis_title="Probabilidad",
        yaxis_title="Densidad"
    )


    st.plotly_chart(fig, use_container_width=True)



    # Definir umbral para retenci√≥n y abandono
    threshold = 0.5
    clientes_retenidos = df[df["retencion"] >= threshold].shape[0]
    clientes_abandono = df[df["churn_medio_estimado"] > threshold].shape[0]

    st.markdown("""
    <div style="display: flex; justify-content: center; align-items: center; margin-top: -15px;">
        <table style="border-collapse: collapse; text-align: center;">
            <tr>
                <td style="border: 2px solid #1F4E79; padding: 8px; border-radius: 10px; background-color: white;">
                    <span style="color: #1F4E79; font-weight: bold;">üîµ Retenidos</span><br>
                    <span style="font-size: 18px; font-weight: bold;">{}</span>
                </td>
                <td style="border: 2px solid #D62728; padding: 8px; border-radius: 10px; background-color: white; margin-left: 15px;">
                    <span style="color: #D62728; font-weight: bold;">üî¥ En Riesgo</span><br>
                    <span style="font-size: 18px; font-weight: bold;">{}</span>
                </td>
            </tr>
        </table>
    </div>
    """.format(clientes_retenidos, clientes_abandono), unsafe_allow_html=True)

    total_clientes = df.shape[0]
    porcentaje_retenidos = (clientes_retenidos / total_clientes) * 100
    porcentaje_abandono = (clientes_abandono / total_clientes) * 100


    st.markdown("<br><br>", unsafe_allow_html=True)
    st.markdown(f"""


    Actualmente, la empresa **retiene el {porcentaje_retenidos:.1f}%** de sus clientes, mientras que **{porcentaje_abandono:.1f}%** est√°n en riesgo de abandono.  
    Es fundamental analizar qu√© factores influyen en esta retenci√≥n y qu√© estrategias de fidelizaci√≥n pueden implementarse para convertir a los clientes en riesgo en compradores recurrentes.  
    """)


    # Secci√≥n: An√°lisis del CLV
    st.markdown("### An√°lisis del Customer Lifetime Value (CLV)")


    st.markdown("""Hemos calculado el Customer Lifetime Value (CLV) proyectado a 5 a√±os para nuestros  clientes con el objetivo de comprender su rentabilidad futura.

    """)

    # Gr√°fico de distribuci√≥n del CLV
    fig_clv = px.histogram(
        df, x="CLV_5_anos", nbins=50, 
        color_discrete_sequence=["#1F4E79"], 
        title="Distribuci√≥n del CLV"
    )
    fig_clv.update_layout(
        xaxis_title="CLV a 5 a√±os (‚Ç¨)",
        yaxis_title="Frecuencia",
        bargap=0.1
    )
    st.plotly_chart(fig_clv, use_container_width=True)
    st.markdown("""
    ###### Conclusiones del CLV

    - **Distribuci√≥n sesgada a la derecha:** La mayor√≠a de los clientes presentan un CLV cercano a 0‚Ç¨, con algunos casos que alcanzan valores positivos elevados, lo que indica que pocos clientes generan una rentabilidad significativa.  

    - **Colas largas:** Se observa una proporci√≥n de clientes con CLV negativo, lo que significa que generan p√©rdidas para la empresa, mientras que en el extremo positivo hay clientes altamente rentables que representan una oportunidad de fidelizaci√≥n.  

    - **Pico central en 0‚Ç¨:** La concentraci√≥n en 0‚Ç¨ sugiere que una gran parte de los clientes no aporta beneficios netos a largo plazo, lo que puede deberse a costos de adquisici√≥n altos o una baja frecuencia de compra.  
    """)



    # C√°lculo de m√©tricas clave
    max_clv = df["CLV_5_anos"].max()
    min_clv = df["CLV_5_anos"].min()
    mean_clv = df["CLV_5_anos"].mean()
    median_clv = df["CLV_5_anos"].median()
    std_clv = df["CLV_5_anos"].std()
    clv_negativos = (df["CLV_5_anos"] < 0).mean() * 100  # % de clientes con CLV negativo
    clientes_superior_media = df[df["CLV_5_anos"] > mean_clv].shape[0]
    porcentaje_superior_media = (clientes_superior_media / df.shape[0]) * 100

    st.markdown("""
            ##### M√©tricas Descriptivas CLV    
    <div style="width:50%; margin:auto; font-size: 14px;">
        <table class="styled-table">
            <thead>
                <tr>
                    <th>M√©trica</th>
                    <th>Valor (‚Ç¨)</th>
                </tr>
            </thead>
            <tbody>
                <tr><td>M√°ximo CLV</td><td>{:,.2f}</td></tr>
                <tr><td>M√≠nimo CLV</td><td>{:,.2f}</td></tr>
                <tr><td>Media CLV</td><td>{:,.2f}</td></tr>
                <tr><td>Mediana CLV</td><td>{:,.2f}</td></tr>
                <tr><td>Desviaci√≥n Est√°ndar</td><td>{:,.2f}</td></tr>
                <tr><td>% CLV Negativo</td><td>{:.2f}%</td></tr>
                <tr><td>% Clientes con CLV > Media</td><td>{:.2f}%</td></tr>
            </tbody>
        </table>
    </div>
    """.format(max_clv, min_clv, mean_clv, median_clv, std_clv, clv_negativos,porcentaje_superior_media), unsafe_allow_html=True)
    st.markdown("""
    **Conclusiones sobre el CLV y proyecci√≥n futura**

    - De media, la empresa espera ganar 7,270.50‚Ç¨ por cliente en los pr√≥ximos 5 a√±os, lo que representa una base s√≥lida para la planificaci√≥n financiera.
    - La mayor√≠a de los clientes tienen un CLV positivo, lo que indica una rentabilidad general favorable.
    - Aunque solo 12.27% de los clientes tienen un CLV negativo, es crucial analizar qu√© factores llevan a estas p√©rdidas y c√≥mo evitarlas con estrategias de fidelizaci√≥n.
    - La empresa deber√≠a concentrar sus esfuerzos econ√≥micos en el 34.80% por ciento de los clientes que le generar√°n beneficios seguros dentro de 5 a√±os.
    """)


    # Clasificaci√≥n de clientes seg√∫n su CLV

    clientes_perdida = df[df["CLV_5_anos"] < 0].shape[0]
    clientes_menor_margen = df[(df["CLV_5_anos"] > 0) & (df["CLV_5_anos"] < df["Margen_eur_Medio"])].shape[0]
    clientes_mayor_margen = df[df["CLV_5_anos"] >= df["Margen_eur_Medio"]].shape[0]

    data_clv_categorias = pd.DataFrame({
        "Categor√≠a": ["CLV Negativo (P√©rdidas)", "CLV < Margen Actual", "CLV > Margen Actual"],
        "Clientes": [clientes_perdida, clientes_menor_margen, clientes_mayor_margen]
    })



    fig = px.bar(
        data_clv_categorias, x="Categor√≠a", y="Clientes", 
        color="Categor√≠a", color_discrete_sequence=color_palette,
        text="Clientes", title="Distribuci√≥n de Clientes seg√∫n su CLV"
    )


    fig.update_layout(
        yaxis_title="N√∫mero de Clientes", 
        xaxis_title="", 
        showlegend=False,
        font=dict(size=14)  
    )

    # Mostrar en Streamlit
    st.plotly_chart(fig, use_container_width=True)

    st.markdown("""
    ##### An√°lisis de la Distribuci√≥n del CLV

    Para evaluar el impacto del Customer Lifetime Value (CLV), segmentamos a los clientes en tres categor√≠as clave:

    1. **üö® Clientes con CLV Negativo (P√©rdidas):** Representan un riesgo financiero, ya que generan m√°s costes de los ingresos que aportar√°n en el futuro. Es importante analizar c√≥mo optimizar su rentabilidad.

    2. **üÜó Clientes con CLV Inferior al Margen Actual:** Aunque actualmente generan ingresos positivos, su valor futuro ser√° menor. Esto indica la necesidad de estrategias de fidelizaci√≥n para evitar una disminuci√≥n en su contribuci√≥n a la empresa.

    3. **üí° Clientes con CLV Superior al Margen Actual:** Son los clientes m√°s valiosos, ya que generar√°n m√°s ingresos en el futuro de lo que aportan actualmente. Es fundamental mantener su compromiso y potenciar su lealtad.""")


# --------------------------------------------------------------------------------------
#   PESTA√ëA 3: PCA
# --------------------------------------------------------------------------------------

if menu == "Segmentaci√≥n Clientes":

    st.title("üßë‚Äçüßë‚Äçüßí Segmentaci√≥n Clientes")
    st.write("""
    Se aplic√≥ PCA para reducir la dimensionalidad a dos componentes principales y luego K-means para agrupar a los clientes en 6 clusters. Esto permite identificar patrones y diferencias entre los  diferentes clientes de compa√±ia.

    **Nota**:
             
    Cada color en el gr√°fico representa un **cluster** con **clientes tienen perfiles de compra similares**.
    Estos grupos ser√°n analizados en detalle a continuaci√≥n para comprender m√°s fondo el comportamiento de cada grupo
    """)

    # Diccionario de nombres de clusters

     # Diccionario de nombres de clusters
    cluster_nombres = {
         0: "Clientes No Rentables",
         1: "Clientes de Alto Mantenimiento",
         2: "Clientes Muy Rentables",
         3: "Clientes Poco Rentables",
         4: "Clientes M√°s Rentables",
         5: "Clientes Estables"
     }
 
    
 
         # Ordenar los clusters correctamente
    df_final["Cluster"] = pd.Categorical(df_final["Cluster"], categories=[0, 1, 2, 3, 4, 5], ordered=True)
 
         # Reemplazar los n√∫meros por nombres en la columna Cluster
    df_final["Cluster_Nombre"] = df_final["Cluster"].map(cluster_nombres)
 
  
         # Definir colores personalizados para cada cluster
    cluster_colors = ["#1F4E79", "#1F77B4", "#4A90E2", "#76A9FA", "#E74C3C", "#F39C12"]
 
         # Mostrar leyenda manual con colores
    st.markdown("### Identificaci√≥n de Clusters")
    legend_html = "".join(
             [f"<span style='background-color:{color}; padding:5px 15px; margin:5px; display:inline-block; color:white; border-radius:5px;'> {cluster_nombres[i]} </span>"
             for i, color in enumerate(cluster_colors)]
         )
    st.markdown(legend_html, unsafe_allow_html=True)
 
         # Crear gr√°fico de dispersi√≥n con nombres de clusters
    fig = px.scatter(
             df_final, x="PC1", y="PC2", color=df_final["Cluster_Nombre"],
             title="Segmentaci√≥n de Clientes con Clusters y Centroides",
             labels={"Cluster_Nombre": "Segmento de Clientes"},
             opacity=0.7,
             color_discrete_sequence=cluster_colors
         )
 
         # Ajustar dise√±o
    fig.update_layout(
             autosize=True,
             width=1200,  
             height=800,
             legend_title_text="Segmentos de Clientes"
         )
 
         # Mostrar gr√°fico interactivo en Streamlit
    st.plotly_chart(fig, use_container_width=True)

   


   

   

    # Lista de m√©tricas disponibles
    metricas_disponibles = list(df_cluster_comp.columns[1:])  # Excluir la columna 'Cluster'

    st.markdown("### Comparaci√≥n de M√©tricas entre Clusters")
    metricas_seleccionadas = st.multiselect("Selecciona las m√©tricas a comparar:", metricas_disponibles, default=["CLV_5_anos", "Margen_eur_Medio"])

    # Verificar que haya m√©tricas seleccionadas
    if metricas_seleccionadas:
        # Crear gr√°fico interactivo
        df_melted = df_cluster_comp.melt(id_vars=["Cluster"], value_vars=metricas_seleccionadas,
                                        var_name="M√©trica", value_name="Valor")
        fig = px.bar(df_melted, x="Cluster", y="Valor", color="M√©trica", barmode="group",
                    title="Comparaci√≥n de M√©tricas entre Clusters",
                    labels={"Valor": "Valor Escalado", "Cluster": "Cluster"},
                    width=800,  
                    height=600)  
        st.plotly_chart(fig, use_container_width=False)  

        # Explicaci√≥n de la visualizaci√≥n
        st.markdown("""
        **C√≥mo usar este gr√°fico:**
        - Cada barra representa el valor de una m√©trica dentro de un cluster.
        - Se pueden seleccionar diferentes m√©tricas arriba del gr√°fico para comparar aspectos clave de los clientes.
        - Estos valores est√°n normalizados, por lo que no representan valores absolutos, sino diferencias entre clusters.
        """)
    else:
        st.warning("Selecciona al menos una m√©trica para visualizar la comparaci√≥n entre clusters.")
    

    # Definir los res√∫menes de cada cluster
    resumen_clusters = {
        "0": {
            "Titulo": "Clientes con Alto Coste y Baja Rentabilidad",
            "Edad Media Coche": "Cercana a la media",
            "PVP Medio": "Alto, gastan m√°s en cada compra",
            "Total Revisiones": "Menos revisiones que la media",
            "Coste Medio Cliente": "Muy alto, pero con margen negativo",
            "CLV 5 a√±os": "Bajo, clientes poco rentables",
            "Margen en Euros": "Negativo, la empresa pierde dinero con estos clientes"
        },
        "1": {
            "Titulo": "Clientes de Alto Mantenimiento pero Baja Rentabilidad",
            "Edad Media Coche": "M√°s alta, coches antiguos",
            "PVP Medio": "Bajo, gastan menos por compra",
            "Total Revisiones": "Muchas revisiones, clientes que cuidan su coche",
            "Coste Medio Cliente": "Medio, pero con baja rentabilidad",
            "CLV 5 a√±os": "Cercano a la media",
            "Margen en Euros": "Bajo, generan poca ganancia"
        },
        "2": {
            "Titulo": "Clientes Muy Rentables con Veh√≠culos Nuevos",
            "Edad Media Coche": "Muy baja, coches nuevos",
            "PVP Medio": "M√°s alto que la media",
            "Total Revisiones": "Muy pocas revisiones, coches nuevos",
            "Coste Medio Cliente": "Bajo, clientes eficientes",
            "CLV 5 a√±os": "Muy alto, clientes rentables",
            "Margen en Euros": "Muy alto, generan grandes beneficios"
        },
        "3": {
            "Titulo": "Clientes con Veh√≠culos Nuevos pero Poco Rentables",
            "Edad Media Coche": "La m√°s baja, coches reci√©n comprados",
            "PVP Medio": "M√°s bajo que la media",
            "Total Revisiones": "Casi ninguna revisi√≥n",
            "Coste Medio Cliente": "Moderado, pero rentabilidad baja",
            "CLV 5 a√±os": "Bajo, baja rentabilidad futura",
            "Margen en Euros": "Bajo, clientes con poco impacto en ganancias"
        },
        "4": {
            "Titulo": "Clientes de Alto Valor y Frecuencia de Compra",
            "Edad Media Coche": "Alta, coches m√°s antiguos",
            "PVP Medio": "Alto, clientes que compran veh√≠culos de mayor valor",
            "Total Revisiones": "Muchas revisiones, clientes fieles al taller",
            "Coste Medio Cliente": "Bajo, clientes rentables",
            "CLV 5 a√±os": "Muy alto, clientes clave",
            "Margen en Euros": "Muy alto, son los clientes m√°s rentables"
        },
        "5": {
            "Titulo": "Clientes Promedio y Estables",
            "Edad Media Coche": "Ligeramente m√°s alta que la media",
            "PVP Medio": "Ligeramente bajo",
            "Total Revisiones": "Similares a la media",
            "Coste Medio Cliente": "Intermedio, sin impacto significativo",
            "CLV 5 a√±os": "Intermedio, clientes estables",
            "Margen en Euros": "Intermedio, contribuyen a la rentabilidad general"
        }
    }

    # T√≠tulo de la secci√≥n
    st.markdown("### Informaci√≥n Resumida por Cluster")

    # Opciones del selectbox con una opci√≥n vac√≠a por defecto
    cluster_seleccionado = st.selectbox("Selecciona un Cluster", [""] + list(resumen_clusters.keys()))

    # Mostrar informaci√≥n solo si se selecciona un cluster
    if cluster_seleccionado:
        st.markdown(f" **Resumen del Cluster {cluster_seleccionado}**")
        cluster_info = resumen_clusters[cluster_seleccionado]

        # Mostrar la informaci√≥n en formato de texto
        for key, value in cluster_info.items():
            st.write(f"**{key}:** {value}")
    
    
    st.markdown("### Estrategias a Futuro")
    st.write("""
    Este an√°lisis identifica los clusters seg√∫n su **Customer Lifetime Value (CLV)** y propone estrategias optimizadas para cada segmento de clientes.
    """)

    # Crear tabla con estilos
    table_html = """
    <style>
        .styled-table {
            width: 100%;
            border-collapse: collapse;
            font-size: 16px;
        }
        .styled-table th, .styled-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: center;
        }
        .styled-table th {
            background-color: #1F4E79;
            color: white;
        }
    </style>

    <table class="styled-table">
        <thead>
            <tr>
                <th>Cluster</th>
                <th>CLV</th>
                <th>Acci√≥n Recomendada</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><b>Clusters 2 y 4</b></td>
                <td>Alto</td>
                <td>Fidelizaci√≥n y Upselling</td>
            </tr>
            <tr>
                <td><b>Clusters 1 y 3</b></td>
                <td>Medio</td>
                <td>Incentivar segunda compra</td>
            </tr>
            <tr>
                <td><b>Clusters 0 y 5</b></td>
                <td>Bajo/Negativo</td>
                <td>Reducir costos o reenfocar estrategias</td>
            </tr>
        </tbody>
    </table>
    """
    st.markdown(table_html, unsafe_allow_html=True)

    # Explicaci√≥n detallada con expanders
    with st.expander("Clusters 2 y 4 ‚Üí Clientes Premium"):
        st.write("""
        - **Caracter√≠stica:** Generan altos ingresos a largo plazo, tienen un margen positivo y realizan compras recurrentes.
        - **Estrategias:**
        - Programas VIP y recompensas por fidelidad.
        - Cross-selling con productos complementarios.
        - Servicio personalizado y atenci√≥n prioritaria.
        """)

    with st.expander("Clusters 1 y 3 ‚Üí Clientes Potenciales"):
        st.write("""
        - **Caracter√≠stica:** Son rentables, pero su CLV es moderado, pueden aumentar su contribuci√≥n si se estimulan las compras.
        - **Estrategias:**
        - Descuentos progresivos para incentivar recompra.
        - Campa√±as de retargeting con promociones personalizadas.
        - Ofrecer financiaci√≥n para compras m√°s grandes.
        """)

    with st.expander("Clusters 0 y 5 ‚Üí Clientes No Rentables"):
        st.write("""
        - **Caracter√≠stica:** CLV bajo o negativo, generan pocos ingresos y pueden representar costos elevados en mantenimiento.
        - **Estrategias:**
        - Analizar por qu√© generan p√©rdidas y reducir costos.
        - Ofertas espec√≠ficas para mejorar su conversi√≥n.
        - Evitar promociones costosas dirigidas a estos clientes.
        """)

    st.success("Objetivo: Aumentar el valor de los clientes potenciales, retener a los clientes premium y optimizar recursos en clientes menos rentables.")